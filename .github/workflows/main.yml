# name 可以自定义
name: Deploy GitHub Pages

# 触发条件：在 push 到 main/master 分支后，新的 Github 项目 应该都是 main，而之前的项目一般都是 master
on:
  push:
    branches:
      - main

# 任务
jobs:
  build-and-deploy:
    # 服务器环境：最新版 Ubuntu
    runs-on: ubuntu-latest
    steps:
      # 拉取代码
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          # persist-credentials: false

      # 生成静态文件
      - name: Build
        run: npm install && export NODE_OPTIONS="--openssl-legacy-provider --max_old_space_size=25990" && npm run docs:build

      # 部署到 GitHub Pages
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          #          ACCESS_TOKEN: ${{ secrets.token_new }} # 也就是我们刚才生成的 secret
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }} # 也就是我们刚才生成的 secret
          BRANCH: gh-pages # 部署到 gh-pages 分支，因为 main 分支存放的一般是源码，而 gh-pages 分支则用来存放生成的静态文件
          FOLDER: docs/.vuepress/dist # vuepress 生成的静态文件存放的地方

      - name: Mirror the Github organization repos to Gitee.
        uses: Yikun/hub-mirror-action@master
        with:
          src: 'github/yangchunjian'    						# 这里改为自己github账号名称，如github/yangchunjian
          dst: 'gitee/yangchunjian'     						# 这里改为gitee上账号名称，如gitee/yangchunjian
          dst_key: ${{ secrets.GITEE_PRIVATE_KEY20230718 }}  	# 这是生成的私钥，下面第3步会讲
          dst_token:  ${{ secrets.GITEE_TOKEN20230718 }}     	# 这是gitee上生成的token，下面会讲
          force_update: true
          static_list: "JavaInterview"   					# 同步的仓库名称，这里为ujava，意思是会自动同步该仓库到gitee下同名仓库
          debug: true