(window.webpackJsonp=window.webpackJsonp||[]).push([[975],{2030:function(a,s,t){"use strict";t.r(s);var v=t(0),e=Object(v.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"题目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[a._v("#")]),a._v(" 题目")]),a._v(" "),s("p",[a._v("一条包含字母 A-Z 的消息通过以下的方式进行了 编码 ：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("'A' -> \"1\"\n'B' -> \"2\"\n...\n'Z' -> \"26\"\n")])])]),s("p",[a._v('要 解码 一条已编码的消息，所有的数字都必须分组，然后按原来的编码方案反向映射回字母（可能存在多种方式）。例如，"11106" 可以映射为：')]),a._v(" "),s("ul",[s("li",[a._v('"AAJF" 对应分组 (1 1 10 6)')]),a._v(" "),s("li",[a._v('"KJF" 对应分组 (11 10 6)')]),a._v(" "),s("li",[a._v('注意，像 (1 11 06) 这样的分组是无效的，因为 "06" 不可以映射为 \'F\' ，因为 "6" 与 "06" 不同。')])]),a._v(" "),s("p",[a._v("除了 上面描述的数字字母映射方案，编码消息中可能包含 '"),s("em",[a._v("' 字符，可以表示从 '1' 到 '9' 的任一数字（不包括 '0'）。例如，编码字符串 \"1")]),a._v('" 可以表示 "11"、"12"、"13"、"14"、"15"、"16"、"17"、"18" 或 "19" 中的任意一条消息。对 "1*" 进行解码，相当于解码该字符串可以表示的任何编码消息。')]),a._v(" "),s("p",[a._v("给你一个字符串 s ，由数字和 '*' 字符组成，返回 解码 该字符串的方法 数目 。")]),a._v(" "),s("p",[a._v("由于答案数目可能非常大，返回 109 + 7 的 模 。")]),a._v(" "),s("p"),a._v(" "),s("p",[a._v("示例 1：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v('输入：s = "*"\n输出：9\n解释：这一条编码消息可以表示 "1"、"2"、"3"、"4"、"5"、"6"、"7"、"8" 或 "9" 中的任意一条。\n可以分别解码成字符串 "A"、"B"、"C"、"D"、"E"、"F"、"G"、"H" 和 "I" 。\n因此，"*" 总共有 9 种解码方法。\n')])])]),s("p",[a._v("示例 2：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v('输入：s = "1*"\n输出：18\n解释：这一条编码消息可以表示 "11"、"12"、"13"、"14"、"15"、"16"、"17"、"18" 或 "19" 中的任意一条。\n每种消息都可以由 2 种方法解码（例如，"11" 可以解码成 "AA" 或 "K"）。\n因此，"1*" 共有 9 * 2 = 18 种解码方法。\n')])])]),s("p",[a._v("示例 3：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v('输入：s = "2*"\n输出：15\n解释：这一条编码消息可以表示 "21"、"22"、"23"、"24"、"25"、"26"、"27"、"28" 或 "29" 中的任意一条。\n"21"、"22"、"23"、"24"、"25" 和 "26" 由 2 种解码方法，但 "27"、"28" 和 "29" 仅有 1 种解码方法。\n因此，"2*" 共有 (6 * 2) + (3 * 1) = 12 + 3 = 15 种解码方法。\n')])])]),s("p"),a._v(" "),s("p",[a._v("提示：")]),a._v(" "),s("ul",[s("li",[a._v("1 <= s.length <= 10"),s("sup",[a._v("5")])]),a._v(" "),s("li",[a._v("s[i] 是 0 - 9 中的一位数字或字符 '*'")])]),a._v(" "),s("h2",{attrs:{id:"思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[a._v("#")]),a._v(" 思路")]),a._v(" "),s("h2",{attrs:{id:"解法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解法"}},[a._v("#")]),a._v(" 解法")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),s("ul",[s("li",[a._v("分析出几种情况，然后分别对各个情况实现")])])])}),[],!1,null,null,null);s.default=e.exports}}]);