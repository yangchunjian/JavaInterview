(window.webpackJsonp=window.webpackJsonp||[]).push([[669],{1654:function(n,a,s){"use strict";s.r(a);var t=s(0),e=Object(t.a)({},(function(){var n=this,a=n._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h2",{attrs:{id:"题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[n._v("#")]),n._v(" 题目")]),n._v(" "),a("p",[n._v("表: Users")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| account      | int     |\n| name         | varchar |\n+--------------+---------+\naccount 是该表的主键(具有唯一值的列)。\n该表的每一行都包含银行中每个用户的帐号。\n表中不会有两个用户具有相同的名称。\n")])])]),a("p",[n._v("表: Transactions")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| trans_id      | int     |\n| account       | int     |\n| amount        | int     |\n| transacted_on | date    |\n+---------------+---------+\ntrans_id 是该表主键(具有唯一值的列)。\n该表的每一行包含了所有账户的交易改变情况。\n如果用户收到了钱, 那么金额是正的; 如果用户转了钱, 那么金额是负的。\n所有账户的起始余额为 0。\n")])])]),a("p",[n._v("编写解决方案,  报告余额高于 10000 的所有用户的名字和余额. 账户的余额等于包含该账户的所有交易的总和。")]),n._v(" "),a("p",[n._v("返回结果表单 无顺序要求 。")]),n._v(" "),a("p",[n._v("查询结果格式如下例所示。")]),n._v(" "),a("p",[n._v("示例 1：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("输入：\nUsers table:\n+------------+--------------+\n| account    | name         |\n+------------+--------------+\n| 900001     | Alice        |\n| 900002     | Bob          |\n| 900003     | Charlie      |\n+------------+--------------+\n\nTransactions table:\n+------------+------------+------------+---------------+\n| trans_id   | account    | amount     | transacted_on |\n+------------+------------+------------+---------------+\n| 1          | 900001     | 7000       |  2020-08-01   |\n| 2          | 900001     | 7000       |  2020-09-01   |\n| 3          | 900001     | -3000      |  2020-09-02   |\n| 4          | 900002     | 1000       |  2020-09-12   |\n| 5          | 900003     | 6000       |  2020-08-07   |\n| 6          | 900003     | 6000       |  2020-09-07   |\n| 7          | 900003     | -4000      |  2020-09-11   |\n+------------+------------+------------+---------------+\n输出：\n+------------+------------+\n| name       | balance    |\n+------------+------------+\n| Alice      | 11000      |\n+------------+------------+\n解释：\nAlice 的余额为(7000 + 7000 - 3000) = 11000.\nBob 的余额为1000.\nCharlie 的余额为(6000 + 6000 - 4000) = 8000.\n")])])]),a("h2",{attrs:{id:"思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[n._v("#")]),n._v(" 思路")]),n._v(" "),a("p",[n._v("sum")]),n._v(" "),a("h2",{attrs:{id:"解法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解法"}},[n._v("#")]),n._v(" 解法")]),n._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("select")]),n._v(" u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("amount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("as")]),n._v(" balance\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("from")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("transactions")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("as")]),n._v(" t \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("left")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("join")]),n._v(" users "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("as")]),n._v(" u \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("on")]),n._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("account "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("account\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("group")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("by")]),n._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("account\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("having")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[n._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("amount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("10000")]),n._v("\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br")])]),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[n._v("#")]),n._v(" 总结")]),n._v(" "),a("ul",[a("li",[n._v("分析出几种情况，然后分别对各个情况实现")])])])}),[],!1,null,null,null);a.default=e.exports}}]);