(window.webpackJsonp=window.webpackJsonp||[]).push([[1292],{2436:function(n,t,e){"use strict";e.r(t);var i=e(0),a=Object(i.a)({},(function(){var n=this,t=n._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h2",{attrs:{id:"解答"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解答"}},[n._v("#")]),n._v(" 解答")]),n._v(" "),t("p",[n._v("以下答案仅做参考，不保证正确性。")]),n._v(" "),t("h3",{attrs:{id:"逻辑题-建议全做-时间控制在十分钟左右"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逻辑题-建议全做-时间控制在十分钟左右"}},[n._v("#")]),n._v(" 逻辑题(建议全做，时间控制在十分钟左右)")]),n._v(" "),t("ol",[t("li",[t("p",[n._v("注重对孩子的自然教育，让孩子亲身感受大自然的神奇与美妙，可促进孩子释放天性，激发自身潜 能:而缺乏这方面教育的孩子容易变得孤独，道德、情感与认知能力的发展都会受到一定的影响。 以下哪项与以上陈述方式最为类似?")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v(" A、 老百姓过去“盼温饱”，现在“盼环保”;过去“求生存”，现在“求生态”。\n B、 脱离环境保护搞经济发展是“竭泽而渔”，离开经济发展抓环境保护是“缘木求鱼”。\n C、 只说一种语言的人，首次被诊断出患阿尔茨海默症的平均年龄约为 71 岁;说双语的人首次被诊\n 断出患阿尔茨海默症的平均年龄约为 76 岁;说三种语言的人，首次被诊断出患阿尔茨海默症的\n 平均年龄约为 78 岁。\n D、 注重调查研究，可以让我们掌握第一手资料:闭门造车，只能让我们脱离实际。\n E、 如果孩子完全依赖电子设备来进行学习和生活，将会对环境越来越漠视。\n")])])])])]),n._v(" "),t("p",[n._v("答：D")]),n._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("p",[n._v("赵明与王洪都是某高校辩论协会成员，在为今年华语辩论赛招募新队员问题上，两人发生了争执。 赵明:我们一定要选拔喜爱辩论的人。因为一个人只有喜爱辩论，才能投入精力和时间研究辩论并参 加辩论赛。 王洪:我们招募的不是辩论爱好者，而是能打硬仗的辩手。无论是谁，只要能在辩论赛中发挥应有的 作用，他就是我们理想的人选。\n以下哪项最可能是两人争论的焦点?")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v(" A、 招募的标准是从现实出发还是从理想出发。\n B、 招募的标准是对辩论的爱好还是辩论的能力。\n C、 招募的目的是为了集体荣誉还是满足个人爱好。 \n D、 招募的目的是为了培养新人还是赢得比赛。\n E、 招募的目的是研究辩论规律还是培养实战能力。\n")])])])])]),n._v(" "),t("p",[n._v("答：D")]),n._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[t("p",[n._v("生态文明建设事关社会发展方式和人民福祉。只有实行最严格的制度、最严密的法治，才能为生态文 明建设提供可靠保障;如果要实行最严格的制度、最严密的法治，就要建立责任追究制度，对那些不 顾生态环境盲目决策并造成严重后果者，追究其相应责任。\n根据上述信息，可以得出以下哪项?")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v(" A、 只有筑牢生态环境的制度防护墙，才能造福于民。\n B、 如果对那些不顾生态环境盲目决策并造成严重后果者追究相应责任，就能为生态文明建设提供可 靠保障。\n C、 实行最严格的制度和最严密的法治是生态文明建设的重要目标。\n D、 如果不建立责任追究制度，就不能为生态文明建设提供可靠保障。\n E、 如果要建立责任追究制度，就要实行最严格的制度、最严密的法治。\n")])])])])]),n._v(" "),t("p",[n._v("答：C")]),n._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[t("p",[n._v("研究人员发现，人类存在3种核苷酸基因类型:AA型、AG型以及GG型。一个人有36%的几率是AA型， 有 48%的几率是 AG 型，有 16%的几率是 GG 型。在 1200 名参与实验的老年人中，拥有 AA 型和 AG 型基 因类型的人都在上午 11 时之前去世，而拥有 GG 型基因类型的人几乎都在下午 6 时左右去世。研究人 员据此认为:GG 型基因类型的人会比其他人平均晚死 7 个小时。 以下哪项如果为真，最能质疑上述研究人员的观点?")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v(" A、 拥有 GG 型基因类型的实验对象容易患上心血管疾病。\n B、 有些人是因为疾病或者意外事故等其他因素而死亡的。\n C、 对人死亡时间的比较，比一天中的哪一时刻更重要的是哪一年、哪一天。\n D、 当死亡临近的时候，人体会还原到一种更加自然的生理节奏感应阶段。\n E、 平均寿命的计算依据应是实验对象的生命存续长度，而不是实验对象的死亡时间。\n")])])])])]),n._v(" "),t("p",[n._v("答：D")]),n._v(" "),t("ol",{attrs:{start:"5"}},[t("li",[t("p",[n._v("人们一直在争论猫与狗谁更聪明。最近，有些科学家不仅研究了动物脑容量的大小，还研究了大脑皮 层神经细胞的数量，发现猫平常似乎总摆出一副智力占优的神态，但猫的大脑皮层神经细胞的数量只 有普通金毛犬的一半。由此，他们得出结论:狗比猫更聪明。 以下哪项最可能是上述科学家得出结论的假设?")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v(" A、 动物大脑皮层神经细胞的数量与动物的聪明程度呈正相关。\n B、 狗善于与人类合作，可以充当导盲犬、陪护犬、搜救犬、警犬等，就对人类的贡献而言，狗能做\n 的似乎比猫多。\n C、 狗可能继承了狼结群捕猎的特点，为了互相配合，它们需要做出一些复杂行为。\n D、 猫的神经细胞数量比狗少，是因为猫不像狗那样“爱交际”。\n E、 棕熊的脑容量是金毛犬的 3 倍,但其脑神经细胞的数量确少于金毛犬，与猫很接近，而棕熊的脑容\n 量确是猫的 10 倍。\n")])])])])]),n._v(" "),t("p",[n._v("答：C")]),n._v(" "),t("h3",{attrs:{id:"语言特性-java-建议全做-时间控制在半小时以内"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语言特性-java-建议全做-时间控制在半小时以内"}},[n._v("#")]),n._v(" 语言特性(Java)(建议全做，时间控制在半小时以内)")]),n._v(" "),t("ol",[t("li",[t("p",[n._v("请写出以下程序的输出结果:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v(' public class Test {\n     public static void main(String[] args) {\n String str1 = "he" + "llo";\n String str2 = "hello";\n String str3 = new String("hello");\n String str4 = new String("hello");\n StringBuilder str5 = new StringBuilder("hello"); StringBuilder str6 = new StringBuilder("hello");\n System.out.println(str1 == str2); System.out.println(str3 == str4); System.out.println(str5 == str6); System.out.println(str1.equals(str2)); System.out.println(str3.equals(str4)); System.out.println(str5.equals(str6));\n } }\n')])])])])]),n._v(" "),t("p",[n._v("答：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("true\nfalse\nfalse\ntrue\ntrue\nfalse\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[t("p",[n._v("请写出以下程序的输出结果;再写出将t.run()改成t.start()后的输出结果?")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v(' public class HelloWorld {\n     public static void main(String args[]) {\n Thread t = new Thread() { public void run() {\n pong(); }\n };\n t.run(); System.out.print("ping");\n }\n      static void pong() {\n        try {\n Thread.sleep(1000); } catch (Exception e) {\n System.out.println(e); }\n System.out.print("pong"); }\n }\n')])])])])]),n._v(" "),t("p",[n._v("答：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("pingpong\n")])])]),t("ol",{attrs:{start:"3"}},[t("li",[t("p",[n._v("请写出以下程序的输出结果:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v('  class HelloA {\n     public HelloA() {\n System.out.println("HelloA"); }\n { System.out.println("I\'m A class"); }\n static { System.out.println("static A"); } }\n public class HelloB extends HelloA {\n     public HelloB() {\n System.out.println("HelloB"); }\n { System.out.println("I\'m B class"); }\n static { System.out.println("static B"); }\n     public static void main(String[] args) {\n        new HelloB();\n } }\n')])])])])]),n._v(" "),t("p",[n._v("答：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("static A\nstatic B\nI'm A class\nHelloA\nI'm B class\nHelloB\n")])])]),t("ol",{attrs:{start:"4"}},[t("li",[t("p",[n._v("请写出以下程序的输出结果:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v('  class Base {\n     public Base() {\n System.out.println("Base"); }\n public Base(int c) { System.out.println("Base--" + c);\n } }\n public class Derived extends Base {\n     public Derived() {\n System.out.println("Derived"); }\n     public Derived(int c) {\n        super(c);\n System.out.println("Derived--" + c); }\n public static void main(String[] args) { Derived a = new Derived();\n Derived b = new Derived(33);\n } }\n')])])])])]),n._v(" "),t("p",[n._v("答：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("Base\nDerived\nBase--33\nDerived--33\n")])])]),t("ol",{attrs:{start:"5"}},[t("li",[t("p",[n._v("请写出以下程序的输出结果:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v('  public class Foo {\n String a = new String("hello"); StringBuilder b = new StringBuilder("okey");\n public static void main(String[] args) { Foo bar = new Foo(); bar.change(bar.a, bar.b); System.out.println(bar.a); System.out.println(bar.b);\n }\n \n  public void change(String x, StringBuilder y) { x += " world";\n y.append(" dokey"); }\n }\n')])])])])]),n._v(" "),t("p",[n._v("答：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("hello\nokey dokey\n")])])]),t("ol",{attrs:{start:"6"}},[t("li",[t("p",[n._v("请写出以下程序的输出结果:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v('  import java.util.Map;\n import java.util.HashMap; import java.util.List;\n import java.util.ArrayList; import java.util.Collections; import java.util.Comparator;\n class Foo {\n     public static <K extends Comparable<K>,V> Map<K,V> func(K[] k, V[] v) {\n Map<K,V> m = new HashMap<K,V>(); for (int i=0; i<k.length; i++) {\n m.put(k[i], v[i]); }\n List<Map.Entry<K,V>> l = new ArrayList<Map.Entry<K,V>>(m.entrySet()); Collections.sort(l, new Comparator<Map.Entry<K,V>>() {\n public int compare(Map.Entry<K,V> m1, Map.Entry<K,V> m2) { return m1.getKey().compareTo(m2.getKey());\n } });\n for (Map.Entry<K,V> e: l) { System.out.println(m.get(e.getKey()));\n }\n return m; }\n }\n public class Test {\n     public static void main(String[] args) {\n String[] a = {"e", "a", "t"}; Integer[] b = {1, 6, 3}; Foo.<String,Integer>func(a, b); Foo.<Integer,String>func(b, a);\n } }\n')])])])])]),n._v(" "),t("p",[n._v("答：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("6\n1\n3\ne\nt\na\n")])])]),t("ol",{attrs:{start:"7"}},[t("li",[t("p",[n._v("请写出以下程序的输出结果:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("  public class Test {\n     public static void main(String[] args) {\n Integer a = new Integer(200); int b = 200;\n Integer c = 200;\n Integer d = 200;\n Integer e = 3;\n Integer f = 3;\n Double g = 3.0;\n Double h = 3.0; System.out.println(a == b); System.out.println(a == c); System.out.println(c == d); System.out.println(e == f); System.out.println(g == h);\n } }\n")])])])])]),n._v(" "),t("p",[n._v("答：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("true\nfalse\nfalse\ntrue\nfalse\n")])])]),t("ol",{attrs:{start:"8"}},[t("li",[t("p",[n._v("请写出以下程序的输出结果:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("  class A {\n     public String f(double x) {\n return String.valueOf(x - 1); }\n protected String f(int x) { return String.valueOf(x * x);\n } }\n \n   class B extends A {\n     protected int f(char x) {\n return Integer.parseInt(String.valueOf(x) + x); }\n public String f(int x) {\n return String.valueOf(x + x);\n } }\n public class Foo {\n     public static void main(String[] args) {\n B s = new B(); System.out.println(s.f(3.0)); System.out.println(s.f(3)); System.out.println(s.f('3'));\n } }\n")])])])])]),n._v(" "),t("p",[n._v("答：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("2.0\n6\n33\n")])])]),t("ol",{attrs:{start:"9"}},[t("li",[t("p",[n._v("请写出以下程序的输出结果:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v(" import java.util.Arrays;    \n public class Test {\n     public static void main(String[] args) {\n int[] a= {1, 2, 3};\n a = Arrays.copyOf(a, a.length+1); for(int i: a) {\n System.out.println(a[i]); }\n } }\n")])])])])]),n._v(" "),t("p",[n._v("答：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("2\n3\n0\n1\n")])])]),t("ol",{attrs:{start:"10"}},[t("li",[t("p",[n._v("请写出以下程序的输出结果:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v('interface A {\n  StringBuilder s = new StringBuilder("ok"); }\nclass B implements A {}\nclass C implements A {}\nclass Foo extends Exception {public Foo(String m) {super(m);}}\nclass Bar extends Foo {public Bar(String m) {super(m);}}\npublic class Test {\npublic static String func() throws Exception {\nString ret = "dokey"; try {\nB b = new B();\nC c = new C();\nc.s.append("ey");\nif (b.s.toString().equals("okey")) {\nthrow new Foo("Foo"); } else {\nthrow new Bar("Bar"); }\n} catch (Bar e) { System.out.println(e.getMessage()); return ret;\n} catch (Foo e) { System.out.println(e.getMessage()); return ret;\n} finally { System.out.println("hello"); ret = "world";\n} }\npublic static void main(String[] args) throws Exception { System.out.println(func());\n} }\n')])])])])]),n._v(" "),t("p",[n._v("答：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("Foo\nhello\ndokey\n")])])]),t("h3",{attrs:{id:"计算机网络、操作系统、数据库等-建议选做-这个部分是给不同方向不同背景的候选人准备的同一套-题-如果有不熟悉的知识点是正常的-请先看题-不熟悉的可直接略过。时间控制在二十分钟以内"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#计算机网络、操作系统、数据库等-建议选做-这个部分是给不同方向不同背景的候选人准备的同一套-题-如果有不熟悉的知识点是正常的-请先看题-不熟悉的可直接略过。时间控制在二十分钟以内"}},[n._v("#")]),n._v(" 计算机网络、操作系统、数据库等(建议选做，这个部分是给不同方向不同背景的候选人准备的同一套 题，如果有不熟悉的知识点是正常的，请先看题，不熟悉的可直接略过。时间控制在二十分钟以内)")]),n._v(" "),t("ol",[t("li",[t("p",[n._v("TCP建立连接需要进行 次握手，断开连接需要进行 次分手。")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v(" 三\n 四\n")])])])]),n._v(" "),t("li",[t("p",[n._v("请简要解释Cookie与Session的差别(三句话以内)。")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v(" 1）cookie是存储在浏览器中的，session是存储在服务端的\n 2）存储大小有限制，cookie受浏览器限制，普遍4k，session理论受内存限制\n 3）生命周期的控制：cookie的生命周期当浏览器关闭的时候就消亡了\n cookie的生命周期是累计的，从创建时就开始计时，30min后cookie生命周期结束\n session的生命周期是间隔的，从创建时开始计时如在30min内没有访问session，那么session生命周期就被销毁\n")])])])]),n._v(" "),t("li",[t("p",[n._v("请分别用一句话解释下列HTTP状态码的意义:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v(" 301：永久性重定向\n 302：临时移动\n 400：客户端请求的语法错误，服务器无法理解\n 500：服务器内部错误，无法完成请求\n")])])])]),n._v(" "),t("li",[t("p",[n._v("请分别用一句话解释下列各 Linux 命令的用途:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v(" top: 查看cpu等\n mv: 移动文件等\n du: 查看磁盘占用\n chmod: 赋组权限\n awk: 处理文本，格式化\n uniq: 命令删除文件中的重复行\n ps: 显示当前进程状态\n grep: 管道\n find: 查找命令\n cat: 查看文件\n wc: 统计字符\n crontab: 定时任务\n netstat: 网络\n xargs: 传递参数\n")])])])]),n._v(" "),t("li",[t("p",[n._v("Linux操作系统中，对一个文件来说，rwx分别代表什么含义?")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v(" r 代表可读、可访问;w 代表可写、可修改;x 代表可执行\n")])])])]),n._v(" "),t("li",[t("p",[n._v("请简要解释进程与线程的差别(三句话以内)。")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v(" 1）从属关系不同：进程是正在运行程序的实例，进程中包含了线程，而线程中不能包含进程\n 2）描述侧重点不同：进程是操作系统分配资源的单位，而线程是操作系统调度的基本单位\n 3）共享资源不同：多个进程之间不能共享资源，每个进程有自己的堆、栈、虚存空间（页表）、文件描述符等信息。而线程之间可以共享进程资源文件（堆和方法区）\n")])])])]),n._v(" "),t("li",[t("p",[n._v("请分别用一句话解释下列MySQL命令的用途。 explain: show processlist:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v(" explain：执行计划 \n show processlist：显示用户正在运行的线程\n")])])])]),n._v(" "),t("li",[t("p",[n._v("请列举几个你最熟悉的软件设计模式(如单例模式)。")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v(" 单例模式\n 策略模式\n 门面模式\n 抽象模板模式\n 工厂模式\n 代理模式\n")])])])])]),n._v(" "),t("p",[n._v("算法与编程能力(建议前三题全做，第四题选做，时间控制在一个小时左右)")]),n._v(" "),t("ol",[t("li",[t("p",[n._v("定义一个日志解析函数，接收一个字符串类型的参数，能够把字符串按如下格式返回。可以用任何语 言实现。\n输入:2020-05-16 19:20:34|user.login|name=Charles&location=Beijing&device=iPhone 输出:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v(" {\n name:”Charles”,\n location:”Beijing”, device:”iPhone”\n }\n")])])])])]),n._v(" "),t("p",[n._v("答：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v('public static void main(String[] args) {\n    String input = "2020-05-16 19:20:34|user.login|name=Charles&location=Beijing&device=iPhone";\n\n    String ret = doString(input);\n    System.out.println("ret="+ret);\n}\n\npublic static String doString(String input){\n    int index = input.lastIndexOf("|");\n    String org = input.substring(index+1);\n    String[] orgArr = org.split("&");\n    Map<String,String> map = new LinkedHashMap<>();\n    for(String s : orgArr){\n        String[] ss = s.split("=");\n        map.put(ss[0],"\\""+ss[1]+"\\"");\n    }\n\n    return map.toString();\n}\n')])])]),t("ol",{attrs:{start:"2"}},[t("li",[n._v("有一个已经排好序的整数序列(升序，无重复项)，序列中可能有正整数、负整数或者0，请用你认为 最优的方法求序列中绝对值最小的数。要求不能使用顺序比较的方法(时间复杂度需要小于 O(n))， 不能使用内置查找函数，可以用任何语言实现。\n输入:一个有序的整数序列。\n输出:绝对值最小的数。")])]),n._v(" "),t("p",[n._v("答：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v('public static void main(String[] args) {\n    int[] input = {-11, -5, -2, 7, 15, 20};\n    int ret = doInput(input);\n    System.out.println("ret="+ret);\n}\n\n\npublic static int doInput(int[] input) {\n    if (input == null || input.length == 0) {\n        return Integer.MIN_VALUE;\n    }\n    int len = input.length;\n    if (input[0] >= 0) return input[0];//没有负数\n    if (input[len - 1] < 0) return input[len - 1];//没有正数\n    int mid = 0;\n    int begin = 0;\n    int end = len - 1;\n    int absMin = 0;\n\n    //数组中既有正数又有负数\n    while (true) {\n        mid = (begin + end) >>> 1;\n        if (input[mid] == 0) {\n            return 0;\n        } else if (input[mid] > 0) {\n            if (input[mid - 1] > 0) {\n                end = mid - 1;\n            } else if (input[mid - 1] == 0) {\n                return 0;\n            } else {\n                break;\n            }\n        } else {\n            //如果值小于0，在数组右半部分查找\n            if (input[mid] + 1 < 0) {\n                begin = mid + 1;\n            } else if (input[mid] + 1 == 0) {\n                return 0;\n            } else {\n                break;\n            }\n        }\n    }\n\n    if (input[mid] > 0) {\n        if (input[mid] < Math.abs(input[mid - 1])) {\n            absMin = input[mid];\n        } else {\n            absMin = input[mid - 1];\n        }\n    } else {\n        if (Math.abs(input[mid]) < input[mid + 1]) {\n            absMin = input[mid];\n        } else {\n            absMin = input[mid + 1];\n        }\n    }\n\n    return absMin;\n\n}\n')])])]),t("ol",{attrs:{start:"3"}},[t("li",[n._v("有一个无序的整数序列(无重复项，长度为奇数)，请用你认为最优的方法求序列的中位数。例如给 定数组 1、5、2、9、8、0、6，中位数是 5。要求算法的时间复杂度需要小于 O(n2)，不能使用内置排 序函数，可以用任何语言实现。\n输入:一个无序的整数序列。\n输出:中位数。")])]),n._v(" "),t("p",[n._v("答：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v('public static void main(String[] args) {\n    int[] input = { 1,5,2,9,8,0,6};\n    Double ret = doInput(input);\n    System.out.println("ret="+ret);\n\n}\n\n\npublic static Double doInput(int[] arr){\n    //边界值\n    if(arr == null || arr.length == 0){\n        return null;\n    }\n\n    //考虑到arr长度为1时交由下面业务逻辑处理耗时也耗空间，此处做提前判断时间复杂度也才多O(1)\n    if(arr.length == 1){\n        return (double) arr[0];\n    }\n\n    // 默认是小顶堆，大顶堆为new PriorityQueue<>(Collections.reverseOrder())\n    PriorityQueue<Integer> minPQ = new PriorityQueue<>();\n    int length = arr.length;\n    int k = length/2+1;\n\n    for(int i = 0;i<k;i++){\n        minPQ.add(arr[i]);\n    }\n    for(int i = k;i<length;i++){\n        if(minPQ.peek() < arr[i]){\n            minPQ.poll();\n            minPQ.add(arr[i]);\n        }\n    }\n    if (length % 2 == 0){\n        return (minPQ.poll() + minPQ.peek())/ 2.0;\n    } else{\n        return minPQ.peek().doubleValue();\n    }\n\n}\n')])])]),t("ol",{attrs:{start:"4"}},[t("li",[n._v("【选做题】有一座高度是k级台阶的楼梯，从下往上走，每跨一步只能向上1级或者3级台阶。请用 你认为最优的方法求一共有多少种走法。例如给定楼梯台阶数 k 为 3，一共有 2 种走法。要求算法的 时间复杂度需要小于 O(2n)，可以用任何语言实现。\n输入:楼梯台阶数 k。\n输出:走法总数。")])]),n._v(" "),t("p",[n._v("答一：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("public int getResultByRecursion(int n){\n    if (n <1) {\n        return 0;\n    }\n    if (n == 1){\n        return 1;\n    }\n    if (n == 2){\n        return 1;\n    }\n    if (n == 3){\n        return 2;\n    }\n    return getResultByRecursion(n-1) + getResultByRecursion(n-2)+ getResultByRecursion(n-3);\n}\n")])])]),t("p",[n._v("答二：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("public int getResultByRecursion(int n){\n    if (n <1) {\n        return 0;\n    }\n    if (n == 1){\n        return 1;\n    }\n    if (n == 2){\n        return 1;\n    }\n    if(n == 3){\n        return 2;\n    }\n    int z = 1;\n    int a = 1;\n    int b = 2;\n    int temp = 0;\n\n    for (int i = 4; i < n+1 ; i++) {\n        temp = a + b + z;\n        z = a;\n        a = b;\n        b= temp;\n    }\n    return temp;\n}\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);