(window.webpackJsonp=window.webpackJsonp||[]).push([[798],{1812:function(s,e,t){"use strict";t.r(e);var a=t(0),n=Object(a.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"题目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[s._v("#")]),s._v(" 题目")]),s._v(" "),e("p",[s._v("表：Employee")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("+---------------+---------+\n| Column Name   |  Type   |\n+---------------+---------+\n| employee_id   | int     |\n| department_id | int     |\n| primary_flag  | varchar |\n+---------------+---------+\n这张表的主键为 employee_id, department_id (具有唯一值的列的组合)\nemployee_id 是员工的ID\ndepartment_id 是部门的ID，表示员工与该部门有关系\nprimary_flag 是一个枚举类型，值分别为('Y', 'N'). 如果值为'Y',表示该部门是员工的直属部门。 如果值是'N',则否\n")])])]),e("p",[s._v("一个员工可以属于多个部门。当一个员工加入超过一个部门的时候，他需要决定哪个部门是他的直属部门。请注意，当员工只加入一个部门的时候，那这个部门将默认为他的直属部门，虽然表记录的值为'N'.")]),s._v(" "),e("p",[s._v("请编写解决方案，查出员工所属的直属部门。")]),s._v(" "),e("p",[s._v("返回结果 没有顺序要求 。")]),s._v(" "),e("p",[s._v("返回结果格式如下例子所示：")]),s._v(" "),e("p",[s._v("示例 1：")]),s._v(" "),e("p",[s._v("输入：\nEmployee table:\n+-------------+---------------+--------------+\n| employee_id | department_id | primary_flag |\n+-------------+---------------+--------------+\n| 1           | 1             | N            |\n| 2           | 1             | Y            |\n| 2           | 2             | N            |\n| 3           | 3             | N            |\n| 4           | 2             | N            |\n| 4           | 3             | Y            |\n| 4           | 4             | N            |\n+-------------+---------------+--------------+\n输出：\n+-------------+---------------+\n| employee_id | department_id |\n+-------------+---------------+\n| 1           | 1             |\n| 2           | 1             |\n| 3           | 3             |\n| 4           | 3             |\n+-------------+---------------+\n解释：\n- 员工 1 的直属部门是 1\n- 员工 2 的直属部门是 1\n- 员工 3 的直属部门是 3\n- 员工 4 的直属部门是 3")]),s._v(" "),e("h2",{attrs:{id:"思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[s._v("#")]),s._v(" 思路")]),s._v(" "),e("p",[s._v("distinct")]),s._v(" "),e("h2",{attrs:{id:"解法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解法"}},[s._v("#")]),s._v(" 解法")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("distinct")]),s._v(" employee_id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" department_id\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" primary_flag "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Y'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" employee_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" employee_id\n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee\n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" employee_id\n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("having")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("department_id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),e("ul",[e("li",[s._v("分析出几种情况，然后分别对各个情况实现")])])])}),[],!1,null,null,null);e.default=n.exports}}]);